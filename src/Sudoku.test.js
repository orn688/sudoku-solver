import React from "react";
import { solve, isValidSudoku } from "./utils"

it("solves an easy puzzle", () => {
  // prettier-ignore
  const input = [
    0,0,6, 0,0,4, 0,0,0,
    4,0,0, 8,3,0, 5,0,0,
    0,0,0, 5,0,0, 8,0,0,
    
    3,0,4, 0,5,0, 0,6,0,
    0,7,0, 0,0,0, 0,3,0,
    0,9,0, 0,1,0, 7,0,8,
    
    0,0,2, 0,0,7, 0,0,0,
    0,0,8, 0,6,2, 0,0,9,
    0,0,0, 3,0,0, 1,0,0
  ]
  // prettier-ignore
  const expectedSolution = [
    8,5,6, 2,9,4, 3,1,7,
    4,2,7, 8,3,1, 5,9,6,
    9,1,3, 5,7,6, 8,2,4,
    
    3,8,4, 7,5,9, 2,6,1,
    6,7,1, 4,2,8, 9,3,5,
    2,9,5, 6,1,3, 7,4,8,
    
    1,4,2, 9,8,7, 6,5,3,
    5,3,8, 1,6,2, 4,7,9,
    7,6,9, 3,4,5, 1,8,2
  ]

  expect(solve(input)).toEqual(expectedSolution);
});

it("solves a medium puzzle", () => {
  // prettier-ignore
  const input = [
    0,0,3, 0,5,6, 7,0,0,
    6,0,7, 0,0,0, 0,0,0,
    0,8,5, 0,0,0, 0,6,0,
    
    1,0,6, 8,0,3, 2,9,0,
    0,0,0, 0,6,0, 0,0,0,
    0,3,4, 9,0,1, 6,0,5,
    
    0,7,0, 0,0,0, 8,3,0,
    0,0,0, 0,0,0, 4,0,7,
    0,0,9, 1,3,0, 5,0,0
  ]
  // prettier-ignore
  const expectedSolution = [
    9,1,3, 2,5,6, 7,4,8,
    6,2,7, 3,8,4, 9,5,1,
    4,8,5, 7,1,9, 3,6,2,

    1,5,6, 8,7,3, 2,9,4,
    2,9,8, 4,6,5, 1,7,3,
    7,3,4, 9,2,1, 6,8,5,

    5,7,1, 6,4,2, 8,3,9,
    3,6,2, 5,9,8, 4,1,7,
    8,4,9, 1,3,7, 5,2,6
  ]

  expect(solve(input)).toEqual(expectedSolution);
});

it("solves a hard puzzle", () => {
  // prettier-ignore
  const input = [
    0,0,0, 5,0,0, 6,9,0,
    0,4,0, 8,0,0, 0,7,0,
    0,0,9, 3,0,7, 0,4,1,

    8,0,0, 0,0,0, 4,0,0,
    0,0,0, 0,2,0, 0,0,0,
    0,0,4, 0,0,0, 0,0,5,

    4,9,0, 2,0,1, 3,0,0,
    0,8,0, 0,0,9, 0,5,0,
    0,6,1, 0,0,5, 0,0,0
  ]
  // prettier-ignore
  const expectedSolution = [
    7,3,8, 5,1,4, 6,9,2,
    1,4,6, 8,9,2, 5,7,3,
    5,2,9, 3,6,7, 8,4,1,

    8,7,2, 1,5,6, 4,3,9,
    9,5,3, 4,2,8, 7,1,6,
    6,1,4, 9,7,3, 2,8,5,
    
    4,9,5, 2,8,1, 3,6,7,
    2,8,7, 6,3,9, 1,5,4,
    3,6,1, 7,4,5, 9,2,8
  ]

  expect(solve(input)).toEqual(expectedSolution);
});

it("solves an evil puzzle", () => {
  // prettier-ignore
  const input = [
    0,0,0, 0,0,5, 3,0,0,
    5,0,0, 0,0,0, 0,2,0,
    1,9,0, 0,0,2, 0,0,0,
    
    0,2,0, 4,7,0, 9,0,0,
    0,0,9, 0,0,0, 6,0,0,
    0,0,8, 0,2,9, 0,5,0,
    
    0,0,0, 1,0,0, 0,4,6,
    0,3,0, 0,0,0, 0,0,9,
    0,0,2, 7,0,0, 0,0,0
  ]
  // prettier-ignore
  const expectedSolution = [
    2,7,4, 6,1,5, 3,9,8,
    5,8,6, 9,3,7, 1,2,4,
    1,9,3, 8,4,2, 7,6,5,

    3,2,5, 4,7,6, 9,8,1,
    7,4,9, 5,8,1, 6,3,2,
    6,1,8, 3,2,9, 4,5,7,

    8,5,7, 1,9,3, 2,4,6,
    4,3,1, 2,6,8, 5,7,9,
    9,6,2, 7,5,4, 8,1,3  
  ]

  expect(solve(input)).toEqual(expectedSolution);
});

it("solves a puzzle with many possible solutions", () => {
  // prettier-ignore
  const input = [
    1,0,0, 0,0,0, 0,0,0,
    0,0,0, 0,0,0, 0,0,0,
    0,0,0, 0,0,0, 0,0,0,

    0,0,0, 0,0,0, 0,0,0,
    0,0,0, 0,0,0, 0,0,0,
    0,0,0, 0,0,0, 0,0,0,

    0,0,0, 0,0,0, 0,0,0,
    0,0,0, 0,0,0, 0,0,0,
    0,0,0, 0,0,0, 0,0,0
  ]

  const solution = solve(input);

  expect(solution[0]).toEqual(1);
  expect(isValidSudoku(solution)).toBe(true);
});

it("correctly identifies a puzzle with no solution", () => {
  // prettier-ignore
  const input = [
    1,0,0, 0,0,0, 0,0,0,
    0,0,0, 0,0,0, 0,0,0,
    0,0,1, 0,0,0, 0,0,0,

    0,0,0, 0,0,0, 0,0,0,
    0,0,0, 0,0,0, 0,0,0,
    0,0,0, 0,0,0, 0,0,0,

    0,0,0, 0,0,0, 0,0,0,
    0,0,0, 0,0,0, 0,0,0,
    0,0,0, 0,0,0, 0,0,0
  ]

  expect(solve(input)).toBe(null);
});
